#!/usr/bin/env python3

import requests
import json
import time

def test_chat_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º chat API —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CHAT API")
    print("=" * 40)
    
    user_id = "1132821710"
    message = "–ø—Ä–∏–≤–µ—Ç"
    
    # –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—Å—Ç–∏–º –ø–∞–º—è—Ç—å
    print("üßπ –û—á–∏—â–∞–µ–º –ø–∞–º—è—Ç—å...")
    try:
        clear_response = requests.post(f"http://localhost:8000/api/memory/{user_id}/clear", timeout=5)
        print(f"   –û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏: {clear_response.status_code}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")
    
    # –î–æ–±–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç—å
    print("\nüìù –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç—å...")
    try:
        memory_data = {
            'role': 'user',
            'content': message,
            'metadata': {
                'source': 'debug_test',
                'user_id': user_id,
                'timestamp': '2025-09-02T14:07:00Z'
            },
            'conversation_id': f'debug_{user_id}',
            'day_number': 1
        }
        
        memory_response = requests.post(
            f"http://localhost:8000/api/memory/{user_id}/add",
            json=memory_data,
            timeout=10
        )
        print(f"   –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç—å: {memory_response.status_code}")
        if memory_response.status_code == 200:
            result = memory_response.json()
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        else:
            print(f"   –û—à–∏–±–∫–∞: {memory_response.text}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ –ø–∞–º—è—Ç–∏: {e}")
    
    # –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º chat API
    print(f"\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º chat API...")
    print(f"   User ID: {user_id}")
    print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
    
    chat_data = {
        'user_id': user_id,
        'messages': [{'role': 'user', 'content': message}],
        'metaTime': "2025-09-02T14:07:00Z"
    }
    
    print(f"   –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞: {json.dumps(chat_data, ensure_ascii=False)}")
    
    try:
        print("\n‚è±Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...")
        start_time = time.time()
        
        chat_response = requests.post(
            "http://localhost:8000/api/chat",
            json=chat_data,
            timeout=60,  # –ë–æ–ª—å—à–æ–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            stream=False
        )
        
        end_time = time.time()
        duration = end_time - start_time
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"   Status Code: {chat_response.status_code}")
        print(f"   –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {duration:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"   Headers: {dict(chat_response.headers)}")
        
        if chat_response.status_code == 200:
            try:
                result = chat_response.json()
                print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:")
                print(f"   –¢–∏–ø –æ—Ç–≤–µ—Ç–∞: {type(result)}")
                print(f"   –ö–ª—é—á–∏: {list(result.keys()) if isinstance(result, dict) else '–Ω–µ —Å–ª–æ–≤–∞—Ä—å'}")
                
                if isinstance(result, dict):
                    parts = result.get('parts', [])
                    print(f"   Parts: {len(parts) if parts else 0}")
                    if parts:
                        print(f"   –ü–µ—Ä–≤–∞—è —á–∞—Å—Ç—å: {parts[0][:100]}...")
                    else:
                        print(f"   –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: {json.dumps(result, ensure_ascii=False, indent=2)}")
                else:
                    print(f"   –û—Ç–≤–µ—Ç: {result}")
                    
            except json.JSONDecodeError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
                print(f"   Raw –æ—Ç–≤–µ—Ç: {chat_response.text[:500]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API:")
            print(f"   –ö–æ–¥: {chat_response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {chat_response.text[:500]}...")
            
    except requests.exceptions.Timeout:
        print(f"‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (–±–æ–ª—å—à–µ 60 —Å–µ–∫—É–Ω–¥)")
    except requests.exceptions.ConnectionError as e:
        print(f"üîå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_chat_api()
