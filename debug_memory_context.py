#!/usr/bin/env python3

import requests
import json

def debug_memory_context():
    """–û—Ç–ª–∞–¥–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–∞–º—è—Ç–∏"""
    
    print("üîç –û–¢–õ–ê–î–ö–ê –ö–û–ù–¢–ï–ö–°–¢–ê –ü–ê–ú–Ø–¢–ò")
    print("=" * 50)
    
    user_id = "1132821710"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
    
    test_data = [
        "–Ø –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç Python",
        "–õ—é–±–ª—é –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", 
        "–ó–∞–Ω–∏–º–∞—é—Å—å —Å–ø–æ—Ä—Ç–æ–º"
    ]
    
    for data in test_data:
        try:
            memory_data = {
                'role': 'user',
                'content': data,
                'metadata': {
                    'source': 'debug_context',
                    'user_id': user_id,
                    'timestamp': '2025-09-02T14:07:00Z'
                },
                'conversation_id': f'debug_{user_id}',
                'day_number': 1
            }
            
            response = requests.post(
                f"http://localhost:8000/api/memory/{user_id}/add",
                json=memory_data,
                timeout=10
            )
            
            if response.status_code == 200:
                print(f"   ‚úÖ {data}")
            else:
                print(f"   ‚ùå {data}: {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå {data}: {e}")
    
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º chat API —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º...")
    
    try:
        chat_data = {
            'user_id': user_id,
            'messages': [{'role': 'user', 'content': '–ß—Ç–æ —Ç—ã –∑–Ω–∞–µ—à—å –æ–±–æ –º–Ω–µ?'}],
            'metaTime': "2025-09-02T14:07:00Z"
        }
        
        response = requests.post(
            "http://localhost:8000/api/chat",
            json=chat_data,
            timeout=30
        )
        
        print(f"üìä Status Code: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"üìÑ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API:")
            print(json.dumps(result, indent=2, ensure_ascii=False))
            
            parts = result.get('parts', [])
            if parts:
                ai_response = ' '.join(parts)
                print(f"\nü§ñ –û—Ç–≤–µ—Ç –ò–ò:")
                print(f"   {ai_response}")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                keywords = ["–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç", "Python", "–º–∞—à–∏–Ω–Ω–æ–µ", "–æ–±—É—á–µ–Ω–∏–µ", "—Å–ø–æ—Ä—Ç"]
                found_keywords = [kw for kw in keywords if kw.lower() in ai_response.lower()]
                
                if found_keywords:
                    print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {', '.join(found_keywords)}")
                else:
                    print(f"\n‚ùå –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    
                if "–Ω–µ –∑–Ω–∞—é" in ai_response.lower() or "–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏" in ai_response.lower():
                    print("‚ùå –ò–ò –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
                else:
                    print("‚úÖ –ò–ò –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print(f"\n" + "=" * 50)
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –æ memory_context!")

if __name__ == "__main__":
    debug_memory_context()
