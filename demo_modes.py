#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±—ã—á–Ω–æ–≥–æ –∏ —Ç–∏—Ö–æ–≥–æ —Ä–µ–∂–∏–º–æ–≤ —Ä–∞–±–æ—Ç—ã Agatha
"""

import os
import subprocess
import time

def run_with_mode(mode_name, env_vars):
    """–ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print(f"\n{'='*60}")
    print(f"üöÄ –†–ï–ñ–ò–ú: {mode_name}")
    print('='*60)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env = os.environ.copy()
    env.update(env_vars)

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
        server_process = subprocess.Popen([
            'python', 'run_server.py'
        ], env=env, cwd=os.path.dirname(os.path.abspath(__file__)),
        stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
        time.sleep(8)

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        test_process = subprocess.run([
            'python', 'test_response.py'
        ], env=env, cwd=os.path.dirname(os.path.abspath(__file__)),
        capture_output=True, text=True, timeout=30)

        print("üìù –í–´–í–û–î –°–ï–†–í–ï–†–ê:")
        print("-" * 40)
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏
        lines = test_process.stdout.split('\n')
        important_lines = [line for line in lines if any(keyword in line.upper() for keyword in [
            'AGATHA', '–ß–ê–°–¢–¨', '–í–û–ü–†–û–°', '–û–®–ò–ë–ö–ê', 'ERROR', 'START', 'COMPLETED'
        ])]

        if important_lines:
            for line in important_lines[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 –≤–∞–∂–Ω—ã—Ö —Å—Ç—Ä–æ–∫
                print(line)
        else:
            print("(–ù–µ—Ç –≤–∞–∂–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π - —Ç–∏—Ö–∏–π —Ä–µ–∂–∏–º)")

        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        server_process.terminate()
        server_process.wait(timeout=5)

    except subprocess.TimeoutExpired:
        print("‚è∞ –¢–∞–π–º–∞—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    print("üé≠ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ï–ñ–ò–ú–û–í AGATHA AI")
    print("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –æ–±—ã—á–Ω—ã–º –∏ —Ç–∏—Ö–∏–º —Ä–µ–∂–∏–º–∞–º–∏")

    # –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º (—Å –ª–æ–≥–∞–º–∏)
    run_with_mode(
        "–û–ë–´–ß–ù–´–ô –†–ï–ñ–ò–ú (—Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏)",
        {'AGATHA_QUIET': 'false'}
    )

    # –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º
    run_with_mode(
        "–¢–ò–•–ò–ô –†–ï–ñ–ò–ú (—Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç)",
        {'AGATHA_QUIET': 'true'}
    )

    print(f"\n{'='*60}")
    print("üìä –°–†–ê–í–ù–ï–ù–ò–ï:")
    print("‚Ä¢ –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º: –ü–æ–ª–Ω–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    print("‚Ä¢ –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º: –¢–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –±–µ–∑ —à—É–º–∞")
    print()
    print("üéØ –î–õ–Ø –ü–†–û–î–ê–ö–®–ï–ù–ê:")
    print("export AGATHA_QUIET=true")
    print("python run_server.py")

if __name__ == "__main__":
    main()
