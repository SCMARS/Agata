#!/usr/bin/env python3
"""
–§–ò–ù–ê–õ–¨–ù–´–ô –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ AGATHA
"""
import requests
import json
import time

def test_system():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    print('üéØ –§–ò–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ –°–ò–°–¢–ï–ú–´ AGATHA')
    print('=' * 60)
    
    base_url = 'http://localhost:8000'
    
    # –¢–µ—Å—Ç 1: Health Check
    print('\nüß™ –¢–µ—Å—Ç 1: Health Check')
    try:
        response = requests.get(f'{base_url}/healthz')
        if response.status_code == 200:
            print('‚úÖ Health Check: OK')
        else:
            print(f'‚ùå Health Check: {response.status_code}')
            return
    except Exception as e:
        print(f'‚ùå Health Check failed: {e}')
        return
    
    # –¢–µ—Å—Ç 2: –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–∑–±–∏—Ç–æ –Ω–∞ —á–∞—Å—Ç–∏)
    print('\nüß™ –¢–µ—Å—Ç 2: –†–∞–∑–±–∏–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π')
    long_message = '–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω–æ –æ —Ç–æ–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏, –≥–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ, –∏ –∫–∞–∫ —ç—Ç–æ –≤—Å–µ —Å–≤—è–∑–∞–Ω–æ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏. –Ø —Ö–æ—á—É –ø–æ–Ω—è—Ç—å –ø–æ–ª–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É –æ—Ç –æ—Å–Ω–æ–≤ –¥–æ –ø–µ—Ä–µ–¥–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.'
    
    response = requests.post(f'{base_url}/api/chat', json={
        'user_id': 'final_test_user',
        'messages': [{'role': 'user', 'content': long_message}],
        'metaTime': '2024-01-15T15:00:00Z'
    })
    
    if response.status_code == 200:
        data = response.json()
        print(f'‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}')
        print(f'‚úÖ –ß–∞—Å—Ç–µ–π –æ—Ç–≤–µ—Ç–∞: {len(data["parts"])}')
        print(f'‚úÖ –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å: {data["has_question"]}')
        print(f'‚úÖ –ó–∞–¥–µ—Ä–∂–∫–∏: {data["delays_ms"]}')
        
        for i, part in enumerate(data['parts'], 1):
            print(f'üìù –ß–∞—Å—Ç—å {i} ({len(part)} —Å–∏–º–≤–æ–ª–æ–≤): {part[:100]}...')
        
        first_response = data['parts']
    else:
        print(f'‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}')
        return
    
    # –¢–µ—Å—Ç 3: –ü–∞–º—è—Ç—å (–≤—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å)
    print('\nüß™ –¢–µ—Å—Ç 3: –°–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏')
    response2 = requests.post(f'{base_url}/api/chat', json={
        'user_id': 'final_test_user',
        'messages': [
            {'role': 'user', 'content': long_message},
            {'role': 'assistant', 'content': ' '.join(first_response)},
            {'role': 'user', 'content': '–ü–æ–º–Ω–∏—à—å –ª–∏ —Ç—ã, –æ —á–µ–º –º—ã –≥–æ–≤–æ—Ä–∏–ª–∏?'}
        ],
        'metaTime': '2024-01-15T15:05:00Z'
    })
    
    if response2.status_code == 200:
        data2 = response2.json()
        print(f'‚úÖ –ü–∞–º—è—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–≤–µ—Ç: {data2["parts"][0][:150]}...')
        print(f'‚úÖ –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: {len(data2["parts"][0])} —Å–∏–º–≤–æ–ª–æ–≤')
        print(f'‚úÖ –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å: {data2["has_question"]}')
    else:
        print(f'‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –ø–∞–º—è—Ç–∏: {response2.status_code}')
    
    # –¢–µ—Å—Ç 4: –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    print('\nüß™ –¢–µ—Å—Ç 4: –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏')
    response3 = requests.post(f'{base_url}/api/chat', json={
        'user_id': 'final_test_user',
        'messages': [
            {'role': 'user', 'content': '–Ø –æ—á–µ–Ω—å —É—Å—Ç–∞–ª –∏ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –ø–æ–¥–∞–≤–ª–µ–Ω–Ω—ã–º'}
        ],
        'metaTime': '2024-01-15T15:10:00Z'
    })
    
    if response3.status_code == 200:
        data3 = response3.json()
        print(f'‚úÖ –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!')
        print(f'‚úÖ –û—Ç–≤–µ—Ç: {data3["parts"][0][:150]}...')
        print(f'‚úÖ –î–ª–∏–Ω–∞: {len(data3["parts"][0])} —Å–∏–º–≤–æ–ª–æ–≤')
        print(f'‚úÖ –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å: {data3["has_question"]}')
    else:
        print(f'‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π: {response3.status_code}')
    
    # –¢–µ—Å—Ç 5: –ö–æ–Ω—Ç—Ä–æ–ª—å —á–∞—Å—Ç–æ—Ç—ã –≤–æ–ø—Ä–æ—Å–æ–≤
    print('\nüß™ –¢–µ—Å—Ç 5: –ö–æ–Ω—Ç—Ä–æ–ª—å —á–∞—Å—Ç–æ—Ç—ã –≤–æ–ø—Ä–æ—Å–æ–≤')
    response4 = requests.post(f'{base_url}/api/chat', json={
        'user_id': 'final_test_user',
        'messages': [
            {'role': 'user', 'content': '–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ –ø–æ–≥–æ–¥–µ'}
        ],
        'metaTime': '2024-01-15T15:15:00Z'
    })
    
    if response4.status_code == 200:
        data4 = response4.json()
        print(f'‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å –≤–æ–ø—Ä–æ—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç!')
        print(f'‚úÖ –û—Ç–≤–µ—Ç: {data4["parts"][0][:150]}...')
        print(f'‚úÖ –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å: {data4["has_question"]}')
        print(f'‚úÖ –ß–∞—Å—Ç–µ–π: {len(data4["parts"])}')
    else:
        print(f'‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å–æ–≤: {response4.status_code}')
    
    print('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´!')
    print('=' * 60)

if __name__ == "__main__":
    test_system() 