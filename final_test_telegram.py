#!/usr/bin/env python3

import requests
import time
import json

def final_test():
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã"""
    
    print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    
    user_id = "1132821710"  # –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å–µ—Ä–≤–µ—Ä
    print("üîç –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞")
    try:
        response = requests.get("http://localhost:8000/healthz", timeout=5)
        if response.status_code == 200:
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –û—á–∏—â–∞–µ–º –ø–∞–º—è—Ç—å
    print("\nüßπ –¢–µ—Å—Ç 2: –û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏")
    try:
        response = requests.post(f"http://localhost:8000/api/memory/{user_id}/clear", timeout=10)
        print(f"   –û—á–∏—Å—Ç–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")
    
    # –¢–µ—Å—Ç 3: –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç—å
    print("\nüìù –¢–µ—Å—Ç 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç—å")
    try:
        memory_data = {
            'role': 'user',
            'content': '–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ì–ª–µ–± –∏ —è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫.',
            'metadata': {
                'source': 'final_test',
                'user_id': user_id,
                'timestamp': '2025-09-02T14:07:00Z'
            },
            'conversation_id': f'final_{user_id}',
            'day_number': 1
        }
        
        response = requests.post(
            f"http://localhost:8000/api/memory/{user_id}/add",
            json=memory_data,
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            memory_result = result.get('result', {})
            print(f"‚úÖ –ü–∞–º—è—Ç—å: Short-term: {'‚úÖ' if memory_result.get('short_term') else '‚ùå'}, Long-term: {'‚úÖ' if memory_result.get('long_term') else '‚ùå'}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    # –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–∏—Ä—É–µ–º chat API
    print("\nü§ñ –¢–µ—Å—Ç 4: Chat API")
    try:
        chat_data = {
            'user_id': user_id,
            'messages': [{'role': 'user', 'content': '–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ì–ª–µ–± –∏ —è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫.'}],
            'metaTime': "2025-09-02T14:07:00Z"
        }
        
        print("   –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ chat API...")
        start_time = time.time()
        
        response = requests.post(
            "http://localhost:8000/api/chat",
            json=chat_data,
            timeout=30
        )
        
        end_time = time.time()
        duration = end_time - start_time
        
        print(f"   –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {duration:.2f} —Å–µ–∫—É–Ω–¥")
        
        if response.status_code == 200:
            result = response.json()
            parts = result.get('parts', [])
            
            if parts:
                ai_response = ' '.join(parts)
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:")
                print(f"   {ai_response[:100]}...")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–π
                if len(ai_response.strip()) > 20:
                    print("‚úÖ –û—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–π")
                else:
                    print("‚ö†Ô∏è –û—Ç–≤–µ—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π")
            else:
                print("‚ùå –ù–µ—Ç —á–∞—Å—Ç–µ–π –≤ –æ—Ç–≤–µ—Ç–µ")
                print(f"   –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: {result}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ chat API: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ chat API: {e}")
        return
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å
    print("\nüîç –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏")
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π
        messages = [
            "–Ø —Ä–∞–±–æ—Ç–∞—é Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º",
            "–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", 
            "–°–µ–≥–æ–¥–Ω—è —Ö–æ—Ä–æ—à–∞—è –ø–æ–≥–æ–¥–∞"
        ]
        
        for msg in messages:
            memory_data = {
                'role': 'user',
                'content': msg,
                'metadata': {
                    'source': 'final_test',
                    'user_id': user_id,
                    'timestamp': '2025-09-02T14:07:00Z'
                },
                'conversation_id': f'final_{user_id}',
                'day_number': 1
            }
            
            response = requests.post(
                f"http://localhost:8000/api/memory/{user_id}/add",
                json=memory_data,
                timeout=10
            )
            
            if response.status_code == 200:
                print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {msg[:30]}...")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        
        # –¢–µ–ø–µ—Ä—å —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è
        print("\n   –°–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è...")
        chat_data = {
            'user_id': user_id,
            'messages': [{'role': 'user', 'content': '–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?'}],
            'metaTime': "2025-09-02T14:07:00Z"
        }
        
        response = requests.post(
            "http://localhost:8000/api/chat",
            json=chat_data,
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            parts = result.get('parts', [])
            
            if parts:
                ai_response = ' '.join(parts)
                print(f"   ü§ñ –û—Ç–≤–µ—Ç: {ai_response[:150]}...")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –∏–º—è
                if "–ì–ª–µ–±" in ai_response or "–≥–ª–µ–±" in ai_response.lower():
                    print("‚úÖ –£–°–ü–ï–•: –°–∏—Å—Ç–µ–º–∞ –ø–æ–º–Ω–∏—Ç –∏–º—è!")
                else:
                    print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –°–∏—Å—Ç–µ–º–∞ –Ω–µ –ø–æ–º–Ω–∏—Ç –∏–º—è")
            else:
                print("‚ùå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –ø–∞–º—è—Ç–∏: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    print("‚úÖ –¢–µ–ø–µ—Ä—å Telegram –±–æ—Ç @agata3_bot –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    print("üì± –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É - –æ–Ω –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏!")

if __name__ == "__main__":
    final_test()
