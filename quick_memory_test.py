#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø–∞–º—è—Ç–∏
"""

import requests
import json
import time

API_URL = "http://localhost:8000/api/chat"
USER_ID = "1132821710"

def send_message(content: str) -> dict:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç"""
    payload = {
        "user_id": USER_ID,
        "messages": [{"role": "user", "content": content}],
        "metaTime": "2025-09-03T21:45:00Z"
    }
    
    try:
        response = requests.post(API_URL, json=payload, timeout=30)
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ [{content[:30]}...] ‚Üí {result['parts'][0][:80]}...")
            return result
        else:
            print(f"‚ùå [{content[:30]}...] ‚Üí HTTP {response.status_code}: {response.text[:100]}")
            return {"error": f"HTTP {response.status_code}"}
    except Exception as e:
        print(f"‚ùå [{content[:30]}...] ‚Üí –û—à–∏–±–∫–∞: {e}")
        return {"error": str(e)}

def main():
    print("üöÄ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ù–û–í–û–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–´ –ü–ê–ú–Ø–¢–ò")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    print("\nüìù –®–∞–≥ 1: –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ —Ñ–∞–∫—Ç—ã")
    send_message("–ú–µ–Ω—è –∑–æ–≤—É—Ç –ì–ª–µ–± –£—Ö–æ–≤—Å–∫–∏–π, –º–Ω–µ 28 –ª–µ—Ç")
    time.sleep(2)
    
    send_message("–Ø —Ä–∞–±–æ—Ç–∞—é Senior Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º")
    time.sleep(2)
    
    send_message("–ú–æ–∏ —Ö–æ–±–±–∏: –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–ø–æ—Ä—Ç, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è")
    time.sleep(2)
    
    # –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    print("\nüîÑ –®–∞–≥ 2: –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    for i in range(8):
        send_message(f"–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {i+1}")
        time.sleep(1)
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å
    print("\nüîç –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å")
    time.sleep(3)  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é
    
    result1 = send_message("–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?")
    result2 = send_message("–°–∫–æ–ª—å–∫–æ –º–Ω–µ –ª–µ—Ç?")
    result3 = send_message("–ö–µ–º —è —Ä–∞–±–æ—Ç–∞—é?")
    result4 = send_message("–ö–∞–∫–∏–µ —É –º–µ–Ω—è —Ö–æ–±–±–∏?")
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\nüìä –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–º–µ–Ω–∏
    if result1 and "parts" in result1:
        response_text = " ".join(result1["parts"]).lower()
        if "–≥–ª–µ–±" in response_text:
            print("‚úÖ –ò–ò –ø–æ–º–Ω–∏—Ç –∏–º—è")
        else:
            print("‚ùå –ò–ò –ù–ï –ø–æ–º–Ω–∏—Ç –∏–º—è")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞
    if result2 and "parts" in result2:
        response_text = " ".join(result2["parts"])
        if "28" in response_text:
            print("‚úÖ –ò–ò –ø–æ–º–Ω–∏—Ç –≤–æ–∑—Ä–∞—Å—Ç")
        else:
            print("‚ùå –ò–ò –ù–ï –ø–æ–º–Ω–∏—Ç –≤–æ–∑—Ä–∞—Å—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
    if result3 and "parts" in result3:
        response_text = " ".join(result3["parts"]).lower()
        if "python" in response_text or "—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫" in response_text or "senior" in response_text:
            print("‚úÖ –ò–ò –ø–æ–º–Ω–∏—Ç —Ä–∞–±–æ—Ç—É")
        else:
            print("‚ùå –ò–ò –ù–ï –ø–æ–º–Ω–∏—Ç —Ä–∞–±–æ—Ç—É")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ö–æ–±–±–∏
    if result4 and "parts" in result4:
        response_text = " ".join(result4["parts"]).lower()
        if any(hobby in response_text for hobby in ["–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "—Å–ø–æ—Ä—Ç", "–ø—É—Ç–µ—à–µ—Å—Ç–≤"]):
            print("‚úÖ –ò–ò –ø–æ–º–Ω–∏—Ç —Ö–æ–±–±–∏")
        else:
            print("‚ùå –ò–ò –ù–ï –ø–æ–º–Ω–∏—Ç —Ö–æ–±–±–∏")
    
    print("\nüéØ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")

if __name__ == "__main__":
    main()