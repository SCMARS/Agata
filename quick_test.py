#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ –∏ —Ç–∏—Ö–æ–≥–æ —Ä–µ–∂–∏–º–æ–≤
"""

import os
import subprocess
import time

def test_mode(mode_name, quiet_flag):
    print(f"\n{'='*50}")
    print(f"üß™ {mode_name}")
    print('='*50)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env = os.environ.copy()
    if quiet_flag:
        env['AGATHA_QUIET'] = 'true'

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
        server_process = subprocess.Popen([
            'python', 'run_server.py'
        ], env=env, cwd='/Users/glebuhovskij/Desktop/Agata',
        stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        time.sleep(6)

        # –î–µ–ª–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        result = subprocess.run([
            'curl', '-s', '-X', 'POST', 'http://localhost:8000/api/chat',
            '-H', 'Content-Type: application/json',
            '-d', '{"user_id": "test", "messages": [{"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç"}], "metaTime": "2024-01-15T14:30:00Z"}'
        ], capture_output=True, text=True, cwd='/Users/glebuhovskij/Desktop/Agata')

        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        server_process.terminate()
        server_process.wait(timeout=3)

        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã–≤–æ–¥
        lines = result.stdout.strip().split('\n')
        log_lines = [line for line in lines if any(keyword in line.upper() for keyword in [
            'VECTOR', 'BEHAVIORAL', 'PROMPT', 'LLM', 'PIPELINE', 'START', 'COMPLETED', 'MEMORY', 'EMBEDDING'
        ])]

        if log_lines:
            print(f"üìù –õ–û–ì–ò ({len(log_lines)} —Å—Ç—Ä–æ–∫):")
            for line in log_lines[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"  {line}")
            if len(log_lines) > 5:
                print(f"  ... –∏ –µ—â—ë {len(log_lines) - 5} —Å—Ç—Ä–æ–∫")
        else:
            print("üìù –õ–û–ì–ò: –ù–µ—Ç –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ JSON –æ—Ç–≤–µ—Ç
        json_lines = [line for line in lines if '"delays_ms"' in line or '"has_question"' in line]
        if json_lines:
            print("‚úÖ JSON –æ—Ç–≤–µ—Ç: –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ùå JSON –æ—Ç–≤–µ—Ç: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    print("üé≠ –°–†–ê–í–ù–ï–ù–ò–ï –†–ï–ñ–ò–ú–û–í AGATHA AI")

    # –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º
    test_mode("–û–ë–´–ß–ù–´–ô –†–ï–ñ–ò–ú", quiet_flag=False)

    # –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º
    test_mode("–¢–ò–•–ò–ô –†–ï–ñ–ò–ú", quiet_flag=True)

    print(f"\n{'='*50}")
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("‚Ä¢ –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º: –ü–æ–ª–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
    print("‚Ä¢ –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º: –¢–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –±–µ–∑ —à—É–º–∞")
    print("\nüéØ –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("  export AGATHA_QUIET=true")

if __name__ == "__main__":
    main()
