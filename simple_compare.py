#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ –∏ —Ç–∏—Ö–æ–≥–æ —Ä–µ–∂–∏–º–æ–≤
"""

import os
import subprocess
import time

def count_log_lines(output):
    """–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤"""
    lines = output.split('\n')
    # –°—á–∏—Ç–∞–µ–º —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–≥–ª—è–¥—è—Ç –∫–∞–∫ –ª–æ–≥–∏ (—Å —ç–º–æ–¥–∑–∏ –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏)
    log_indicators = ['üß†', 'üé≠', 'üìù', 'ü§ñ', '‚úÖ', '‚ùå', 'üîç', 'üîÑ', 'üöÄ', 'üìä']
    log_lines = [line for line in lines if any(indicator in line for indicator in log_indicators)]
    return len(log_lines), len(lines)

def test_mode(env_var):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∂–∏–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    env = os.environ.copy()
    if env_var:
        env['AGATHA_QUIET'] = 'true'

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        server_process = subprocess.Popen([
            'python', 'run_server.py'
        ], env=env, cwd=os.path.dirname(os.path.abspath(__file__)),
        stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

        time.sleep(5)

        # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º –≤—ã–≤–æ–¥
        result = subprocess.run([
            'curl', '-s', '-X', 'POST', 'http://localhost:8000/api/chat',
            '-H', 'Content-Type: application/json',
            '-d', '{"user_id": "test", "messages": [{"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç"}], "metaTime": "2024-01-15T14:30:00Z"}'
        ], capture_output=True, text=True, cwd=os.path.dirname(os.path.abspath(__file__)))

        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        server_process.terminate()
        server_process.wait(timeout=3)

        return count_log_lines(result.stdout)

    except Exception as e:
        return 0, 0

def main():
    print("üé≠ –ü–†–û–°–¢–û–ï –°–†–ê–í–ù–ï–ù–ò–ï –†–ï–ñ–ò–ú–û–í")
    print("=" * 50)

    # –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º
    normal_logs, normal_total = test_mode(None)
    print(f"üìù –û–ë–´–ß–ù–´–ô –†–ï–ñ–ò–ú:")
    print(f"   –õ–æ–≥-—Å—Ç—Ä–æ–∫: {normal_logs}")
    print(f"   –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {normal_total}")

    # –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º
    quiet_logs, quiet_total = test_mode('true')
    print(f"\nü§´ –¢–ò–•–ò–ô –†–ï–ñ–ò–ú:")
    print(f"   –õ–æ–≥-—Å—Ç—Ä–æ–∫: {quiet_logs}")
    print(f"   –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {quiet_total}")

    # –†–∞–∑–Ω–∏—Ü–∞
    print(f"\nüìä –†–ê–ó–ù–ò–¶–ê:")
    print(f"   –õ–æ–≥–æ–≤ –º–µ–Ω—å—à–µ –Ω–∞: {normal_logs - quiet_logs} —Å—Ç—Ä–æ–∫")
    print(f"   –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –º–µ–Ω—å—à–µ –Ω–∞: {normal_total - quiet_total} —Å—Ç—Ä–æ–∫")

    if normal_logs > quiet_logs:
        print("‚úÖ –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    else:
        print("‚ö†Ô∏è –†–∞–∑–Ω–∏—Ü–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞")

if __name__ == "__main__":
    main()
