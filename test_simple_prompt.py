#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç - —á—Ç–æ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –ø—Ä–æ–º–ø—Ç –∏ —á—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –º–æ–¥–µ–ª—å
"""

import requests
import json
import time
from datetime import datetime

API_BASE_URL = "http://localhost:8000"
TEST_USER = "simple_test"

def main():
    print("üîç –ü–†–û–°–¢–û–ô –¢–ï–°–¢ - –ß–¢–û –í –ü–†–û–ú–ü–¢–ï")
    print("=" * 40)
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    print("‚è≥ –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥...")
    time.sleep(15)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –û–î–ò–ù —Ñ–∞–∫—Ç
    print("\nüìù –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–∫—Ç: '–ú–µ–Ω—è –∑–æ–≤—É—Ç –ì–ª–µ–±'")
    memory_data = {
        'role': 'user',
        'content': '–ú–µ–Ω—è –∑–æ–≤—É—Ç –ì–ª–µ–±',
        'metadata': {'source': 'test'},
        'conversation_id': 'test_123',
        'day_number': 1
    }
    
    try:
        response = requests.post(f"{API_BASE_URL}/api/memory/{TEST_USER}/add", json=memory_data, timeout=30)
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {result}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    # –ñ–¥–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    print("‚è≥ –ñ–¥–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É—é –ë–î...")
    time.sleep(10)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫ –≤ –ø–∞–º—è—Ç–∏...")
    try:
        search_response = requests.post(
            f"{API_BASE_URL}/api/memory/{TEST_USER}/search",
            json={"query": "–∏–º—è –∑–æ–≤—É—Ç", "limit": 3},
            timeout=20
        )
        if search_response.status_code == 200:
            search_results = search_response.json()
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:")
            print(json.dumps(search_results, indent=2, ensure_ascii=False))
        else:
            print(f"‚ùå –ü–æ–∏—Å–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {search_response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
    
    # –ó–∞–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å
    print("\nü§î –ó–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å: '–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?'")
    try:
        chat_data = {
            'user_id': TEST_USER,
            'messages': [{'role': 'user', 'content': '–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?'}],
            'metaTime': datetime.now().isoformat()
        }
        
        chat_response = requests.post(f"{API_BASE_URL}/api/chat", json=chat_data, timeout=30)
        
        if chat_response.status_code == 200:
            chat_result = chat_response.json()
            print(f"üìã –ü–û–õ–ù–´–ô –û–¢–í–ï–¢:")
            print(json.dumps(chat_result, indent=2, ensure_ascii=False))
            
            parts = chat_result.get('parts', [])
            if parts:
                ai_response = ' '.join(parts)
                print(f"\nü§ñ –û–¢–í–ï–¢ –ú–û–î–ï–õ–ò: {ai_response}")
                
                if "–≥–ª–µ–±" in ai_response.lower():
                    print("‚úÖ –ú–û–î–ï–õ–¨ –ü–û–ú–ù–ò–¢ –ò–ú–Ø!")
                else:
                    print("‚ùå –ú–û–î–ï–õ–¨ –ù–ï –ü–û–ú–ù–ò–¢ –ò–ú–Ø!")
            else:
                print("‚ùå –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
        else:
            print(f"‚ùå Chat API –æ—à–∏–±–∫–∞: {chat_response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {chat_response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ chat: {e}")

if __name__ == "__main__":
    main()
